<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">
  <title>Hansen&#39;s Blog</title>
  <icon>https://www.gravatar.com/avatar/0890096d268c2e2c11da95086325db7b</icon>
  <subtitle>脚踏实地，实事求是</subtitle>
  <link href="https://hansen1994.github.io/atom.xml" rel="self"/>
  
  <link href="https://hansen1994.github.io/"/>
  <updated>2021-07-16T09:17:34.569Z</updated>
  <id>https://hansen1994.github.io/</id>
  
  <author>
    <name>Hansen</name>
    <email>646380243@qq.com</email>
  </author>
  
  <generator uri="https://hexo.io/">Hexo</generator>
  
  <entry>
    <title>git小书</title>
    <link href="https://hansen1994.github.io/2021/07/16/git%E5%B0%8F%E4%B9%A6/"/>
    <id>https://hansen1994.github.io/2021/07/16/git%E5%B0%8F%E4%B9%A6/</id>
    <published>2021-07-16T08:27:35.209Z</published>
    <updated>2021-07-16T09:17:34.569Z</updated>
    
    <content type="html"><![CDATA[<h3 id="前言"><a href="#前言" class="headerlink" title="前言"></a>前言</h3><p>Git仓库是对项目管理的核心工具。现在线上的github、码云、coding等，线下的gitlab、SCM Manager 等都是需要此工具操作。因此，掌握Git的相关知识还是比较重要的哦，本章讲的是Git的安装及基本使用。要使用Git，必须得先下载Git，美丽的故事就从下载这儿开始了。</p><h3 id="1-Git的安装与配置"><a href="#1-Git的安装与配置" class="headerlink" title="1.Git的安装与配置"></a>1.Git的安装与配置</h3><h4 id="1-1-安装"><a href="#1-1-安装" class="headerlink" title="1.1 安装"></a>1.1 安装</h4><p>安装非常简单，其实就是一些傻瓜式的操作，直接就在他的官网上下载吧，我就不说话了，下载完后鼠标右键就会多出一个命令行工具，如图所示，未来window上的伙伴们就可以在命令行里操作了。至于mac的，听说按完后就自带的命令行工具就可以使用！</p><p><img src="/.io//image-20210716171659048.png" alt="image-20210716171659048"></p><h4 id="1-2-配置"><a href="#1-2-配置" class="headerlink" title="1.2 配置"></a>1.2 配置</h4><p>1.打开命令行终端输入 <code>ssh-keygen -t rsa -C &quot;your_email@example.com&quot;</code>( 你的邮箱)，连续点击 Enter 键即可。</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ ssh-keygen -t rsa -C <span class="string">&quot;hansen@qq.com&quot;</span>     </span><br></pre></td></tr></table></figure><p>2.添加公钥</p><p>①.在终端输入 <code>start ~/.ssh</code>，用文本编辑器打开『id_rsa.pub』文件，复制全部内容(linux 使用<code>open ~/.ssh</code>)</p><p>②.登录 github，点击右上方的头像，选择settings ，点击Add SSH key，把id_rsa.pub的内容复制到里面即可</p><img src="/.io//image-20210716091943721.png" width="800" height="400" alt="图片名称" align="center"><p>用ssh -T <a href="mailto:&#x67;&#x69;&#116;&#64;&#x67;&#105;&#116;&#x68;&#117;&#x62;&#46;&#99;&#x6f;&#x6d;">&#x67;&#x69;&#116;&#64;&#x67;&#105;&#116;&#x68;&#117;&#x62;&#46;&#99;&#x6f;&#x6d;</a> 去判断有没有成功，如下图所示就代表成功了，每种配置的方法大同小异</p><p><img src="/.io//markdown\git小书\image-20210716093426293.png" alt="image-20210716093426293"></p><h4 id="1-3-一台机器控制多个仓库"><a href="#1-3-一台机器控制多个仓库" class="headerlink" title="1.3 一台机器控制多个仓库"></a>1.3 一台机器控制多个仓库</h4><p>有时候，你的项目存在不同的仓库下；那么，你就要配置不同的仓库了，说来也简单，看步骤。比如，这边我拿github和码云来举例吧。</p><p>先进入 cd /c/Users/HS/.ssh 目录创建(每个人的目录不尽相同)，未来也好管理。</p><p>1.创建2个证书</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line"><span class="number">1</span>、根据每个repo用到的email生成ssh证书 ,填入自己在代码仓库中的邮箱帐号</span><br><span class="line"> ssh-keygen -t rsa -C  <span class="string">&quot;【你的邮箱】&quot;</span></span><br><span class="line"><span class="number">2</span>、根据不同的git仓库进行命名，后面需要给每个仓库配置证书，这里我命名为<span class="function">id_rsa_github</span></span><br><span class="line"><span class="function">Enter file in which to save the <span class="title">key</span> <span class="params">(/c/Users/HS/.ssh/id_rsa)</span>: id_rsa_github</span></span><br><span class="line"><span class="function">3、输入密码，一般都是直接回车，每次都是免密 </span></span><br><span class="line"><span class="function">Enter <span class="title">passphrase</span> <span class="params">(empty <span class="keyword">for</span> no passphrase)</span>:</span></span><br><span class="line"><span class="function">Enter same passphrase again: </span></span><br><span class="line"><span class="function">4、这样就在/c/Users/HS/.ssh/id_rsa)目录下生产了两个文件id_rsa_github和id_rsa_github.pub</span></span><br><span class="line"><span class="function">5、执行上面同样的语句，再次生成一个证书 id_rsa_gitee</span></span><br></pre></td></tr></table></figure><p>如图所示</p><p><img src="/.io//markdown\git小书\image-20210716102641483.png" alt="image-20210716102641483"></p><p>2.在 .ssh 目录下新建config文件 编辑如下内容</p><figure class="highlight leaf"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><span class="line"><span class="function"><span class="keyword">#</span><span class="title">github</span><span class="params">(<span class="variable">user</span> 对应你的<span class="variable">github</span>用户名)</span></span></span><br><span class="line">       Host github.com    </span><br><span class="line">       HostName github.com</span><br><span class="line">       IdentityFile ~/.ssh/id_rsa_github</span><br><span class="line">       User Hansen1994</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">#</span><span class="title">gitee</span><span class="params">(<span class="variable">user</span> 对应你<span class="variable">gitee</span>用户名)</span></span></span><br><span class="line">       Host gitee.com</span><br><span class="line">       HostName gitee.com</span><br><span class="line">       IdentityFile ~/.ssh/id_rsa_gitee</span><br><span class="line">       User dream1994</span><br></pre></td></tr></table></figure><p>然后可以使用了</p><h3 id="2-工作流-与经理的对话"><a href="#2-工作流-与经理的对话" class="headerlink" title="2.工作流(与经理的对话)"></a>2.工作流(与经理的对话)</h3><img src="/.io//markdown\git小书\image-20210716104033500.png" alt="image-20210716104033500" style="zoom: 50%;"><p>———————————第一天—————————–</p><p><code>git init</code> 初始化仓库</p><p><code>git add xxx.txt</code> / <code>git add . </code>添加文件/添加全部文件(将工作区的文件提交到暂存区)</p><p><code>git commit -m &quot;sss&quot;</code>  提交本地仓库前取名 -m是我要加一个备注,sss是备注的内容</p><p>———————–第一天下班前(产品经理加了需求)—————————-</p><p>me: 加班开始干活吧,balabala,敲敲敲···,然后提交到暂存区，不要提交到本地仓库</p><p><code>git add xxx.txt</code> 把文件提交到暂存区</p><p>———————–到了第二天(产品经理说昨天下班前的需求不要了，客户又提了新的需求了)———</p><p>me: 哎，开始删吧</p><p><code>git reset HEAD</code> 把昨天提交到暂存区的东西返回到工作区（可以指定文件<code>git reset HEAD filepathname</code>）</p><p><code>git checkout xxx.txt</code> 删除昨晚下班后的需求(他是删除工作区刚写完代码还没有提交到暂存区的代码，如果删除全部用 <code>git checkout .</code>谨慎使用)</p><p>me:继续开始产品经理今天的需求吧(和第一天的操作差不多最后进入本地仓库)下班</p><p>———————到了第三天(产品经理说第二天的东西都不要了，需求不要了)——————–</p><p>me：我真是太不幸了~~</p><p><code>git log</code>  查看每次更新的日志，找到最初第一天的内容编号</p><p>`git reset –hard 【版本号】 ，版本号可以通过git log去查看</p><p>——————到了第四天(产品经理说本地文件也不要了)————–</p><p>me: 好吧~我真是太可怜了~~</p><p><code>git rm xxx.txt </code>将本地文件清</p><p><code>git commit -m &quot;delete xxx&quot;</code> 清空本地仓库的文件</p><h3 id="3-还未建立远程仓库推送代码"><a href="#3-还未建立远程仓库推送代码" class="headerlink" title="3. 还未建立远程仓库推送代码"></a>3. 还未建立远程仓库推送代码</h3><p>me: 一切从0开始</p><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><span class="line">git init              初始化仓库</span><br><span class="line"></span><br><span class="line">git README.md         添加文档</span><br><span class="line"></span><br><span class="line">git commit -m <span class="string">&quot;xxx&quot;</span>    -m为修改名称(任取)</span><br><span class="line"></span><br><span class="line">git remote add origin git@e.github.net:han1994/dasadasa.git   将本地与远程的关联起来</span><br><span class="line"></span><br><span class="line">git push -u origin master   往线上推送上去</span><br><span class="line"></span><br><span class="line">git pull origin master 下载远程仓库的文件</span><br></pre></td></tr></table></figure><h3 id="4-本地已有代码，这时想创建远程仓库做关联"><a href="#4-本地已有代码，这时想创建远程仓库做关联" class="headerlink" title="4. 本地已有代码，这时想创建远程仓库做关联"></a>4. 本地已有代码，这时想创建远程仓库做关联</h3><p>这个时候，你本地已经写好代码了，想和远程的仓库做下关联</p><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">git remote -v  查看关联信息</span><br><span class="line"></span><br><span class="line">git remote add origin git@e.github.net:han1994/dasadasa.git  关联</span><br><span class="line"></span><br><span class="line">git push origin master 推送</span><br></pre></td></tr></table></figure><h3 id="5-打包管理"><a href="#5-打包管理" class="headerlink" title="5. 打包管理"></a>5. 打包管理</h3><p>如果你已经写好了一个版本的代码，那么就可以进行打包，并标注标签</p><figure class="highlight crmsh"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><span class="line">如果未来想要回滚，我们就可以使用标签进行回滚，而需要通过分支了！</span><br><span class="line"></span><br><span class="line">git <span class="keyword">tag</span>                                      <span class="title">查看所有标签</span></span><br><span class="line"><span class="title"></span></span><br><span class="line"><span class="title">git</span> <span class="keyword">tag</span> <span class="title">name</span>                             创建标签</span><br><span class="line"></span><br><span class="line">git <span class="keyword">tag</span> <span class="title">-a</span> name -m <span class="string">&quot;comment&quot;</span>   指定提交信息</span><br><span class="line"></span><br><span class="line">git <span class="keyword">tag</span> <span class="title">-d</span> name                         删除标签</span><br><span class="line"></span><br><span class="line">git push origin name                  标签发布</span><br></pre></td></tr></table></figure><h3 id="6-分支管理（多人协作）"><a href="#6-分支管理（多人协作）" class="headerlink" title="6.分支管理（多人协作）"></a>6.分支管理（多人协作）</h3><img src="/.io//markdown\git小书\image-20210716151430074.png" alt="image-20210716151430074" style="zoom:67%;"><p>多人开发其实就是编写属于自己的功能，可以创建自己分支，而不要在主分支上改动，最后进行合并即可！</p><h4 id="6-1多人开发的步骤"><a href="#6-1多人开发的步骤" class="headerlink" title="6.1多人开发的步骤"></a>6.1多人开发的步骤</h4><p>1.<code>git checkout -b 【xxx】 / git checkout 【xxx】</code> 新建一个分支/切换到另一个分支（git branch//查看分支和当前在哪条分支上）</p><p>2.然后用命令<code>vi a.js</code>去修改内容(vi属于linux内容，完成退出后可用命令<code>git status</code>去查看是否被修改或使用<code>git diff</code>去查看修改的内容)</p><p>3.<code>git add . </code>  //增加当前修改的所有代码</p><p>4.<code>git commit -m &quot;update part2&quot;</code>  //-m为修改名称(任取)</p><p>5.<code>git push origin 【xxx】</code> //往线上增加分支</p><p>——–半个月后功能完成（代码合并到主要分支master——–）</p><p>6.<code>git checkout master</code> //返回到master分支上</p><p>7.<code>git merge 【xxx】</code> //把之前改的xxx分支内容拷贝到master分支上来</p><p>8.<code>git push origin master</code> //完成后推送到线上去</p><h4 id="6-2-解决2人同时更改同一个分支导致代码推不上去的问题"><a href="#6-2-解决2人同时更改同一个分支导致代码推不上去的问题" class="headerlink" title="6.2 解决2人同时更改同一个分支导致代码推不上去的问题"></a>6.2 解决2人同时更改同一个分支导致代码推不上去的问题</h4><p>假设本地的开发时候当你在编码时候，原本应该在分支上做改动而不小心在dev上做了改动</p><ol><li>我们可以先用<code>git stash</code>，将自己新的代码先推容缓存</li><li>通过 <code>git pull origin dev</code>, 将代码拉下来</li><li>执行<code>git stash pop</code>将暂存的东西释放出来返还到此分支上</li></ol><p>这里切记: 你<font color="#fc5531">不要用 git checkout . </font>因为这会让你今天的工作都白费了。</p><h4 id="6-3-解决代码冲突问题"><a href="#6-3-解决代码冲突问题" class="headerlink" title="6.3 解决代码冲突问题"></a>6.3 解决代码冲突问题</h4><p>如果你代码拉下后，两个人的代码有冲突，先大家在一起讨论，看下谁改的合理，一般像vscode此类工具他会自动分析出，哪里代码有冲突。</p><h3 id="7-git-reset和git-revert的比较"><a href="#7-git-reset和git-revert的比较" class="headerlink" title="7.git reset和git revert的比较"></a>7.git reset和git revert的比较</h3><p>他们都是将代码复原的意思</p><h4 id="git-reset方法"><a href="#git-reset方法" class="headerlink" title="git reset方法:"></a>git reset方法:</h4><p>它可以回退远程上commit的的提交</p><p>步骤：</p><p><code>git reset --hard HEAD~1</code> // 回退一个版本 后面的数字代表回滚的个数，2代表回退2个</p><p><code>git reset --hard 【版本号】</code>// 作用与上条一样，版本号可以用git log查看或者去站点查看</p><p><code>git push origin HEAD --force </code>// 远程提交回退</p><p>如图:</p><img src="/.io//markdown\git小书\image-20210716153530741.png" alt="image-20210716153530741" style="zoom: 80%;"><h4 id="git-revert"><a href="#git-revert" class="headerlink" title="git revert"></a>git revert</h4><p>git revert是用于“反做”某一个版本，以达到撤销该版本的修改的目的。比如，我们commit了三个版本（版本一、版本二、 版本三），突然发现版本二不行（如：有bug），想要撤销版本二，但又不想影响撤销版本三的提交，就可以用 git revert 命令来反做版本二，生成新的版本四，这个版本四里会保留版本三的东西，但撤销了版本二的东西。</p><p>步骤:</p><p>①. <code>git revert -n</code> 【版本号】 我们可以先跳到此版本号，然后对bug进行修改</p><p>②. <code>git commit -m</code> 版本名 // 提交到新版本，如上面的版本四</p><p>③. <code>git push</code> // 最后推送到远程分支</p><p>如图:</p><img src="/.io//markdown\git小书\image-20210716153709645.png" alt="image-20210716153709645" style="zoom:80%;"><h3 id="8-git命令大全表"><a href="#8-git命令大全表" class="headerlink" title="8.git命令大全表"></a>8.git命令大全表</h3><h4 id="8-1-git命令大全表"><a href="#8-1-git命令大全表" class="headerlink" title="8.1 git命令大全表"></a>8.1 git命令大全表</h4><p><img src="https://img-blog.csdnimg.cn/20191226214801971.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3FxXzM4NTg4ODQ1,size_1,color_FFFFFF,t_70" alt="img"></p><h4 id="8-2实用的linux命令"><a href="#8-2实用的linux命令" class="headerlink" title="8.2实用的linux命令"></a>8.2实用的linux命令</h4><ol><li><code>cat</code> 文件名 //查看文件内容</li><li><code>touch + 文件名</code> // 创建新文件</li><li> <code>cp 【路径一】 【路径二】</code> // 将文件从路径一移动到路径二</li><li><code>vi 文件</code> //新建文件并打开文件</li><li><code>i</code> 插入文字 </li><li><code>esc + :wq</code>//退出并保存文件内容</li></ol>]]></content>
    
    
      
      
    <summary type="html">&lt;h3 id=&quot;前言&quot;&gt;&lt;a href=&quot;#前言&quot; class=&quot;headerlink&quot; title=&quot;前言&quot;&gt;&lt;/a&gt;前言&lt;/h3&gt;&lt;p&gt;Git仓库是对项目管理的核心工具。现在线上的github、码云、coding等，线下的gitlab、SCM Manager 等都是需要此工具</summary>
      
    
    
    
    <category term="git" scheme="https://hansen1994.github.io/categories/git/"/>
    
    
  </entry>
  
  <entry>
    <title>Hello World</title>
    <link href="https://hansen1994.github.io/2021/05/13/hello-world/"/>
    <id>https://hansen1994.github.io/2021/05/13/hello-world/</id>
    <published>2021-05-13T05:37:23.221Z</published>
    <updated>2021-05-23T14:25:54.472Z</updated>
    
    <content type="html"><![CDATA[<p>Welcome to <a href="https://hexo.io/">Hexo</a>! This is your very first post. Check <a href="https://hexo.io/docs/">documentation</a> for more info. If you get any problems when using Hexo, you can find the answer in <a href="https://hexo.io/docs/troubleshooting.html">troubleshooting</a> or you can ask me on <a href="https://github.com/hexojs/hexo/issues">GitHub</a>.</p><h2 id="Quick-Start"><a href="#Quick-Start" class="headerlink" title="Quick Start"></a>Quick Start</h2><h3 id="Create-a-new-post"><a href="#Create-a-new-post" class="headerlink" title="Create a new post"></a>Create a new post</h3><span id="more"></span><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ hexo new <span class="string">&quot;My New Post&quot;</span></span><br></pre></td></tr></table></figure><p>More info: <a href="https://hexo.io/docs/writing.html">Writing</a></p><h3 id="Run-server"><a href="#Run-server" class="headerlink" title="Run server"></a>Run server</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ hexo server</span><br></pre></td></tr></table></figure><p>More info: <a href="https://hexo.io/docs/server.html">Server</a></p><h3 id="Generate-static-files"><a href="#Generate-static-files" class="headerlink" title="Generate static files"></a>Generate static files</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ hexo generate</span><br></pre></td></tr></table></figure><p>More info: <a href="https://hexo.io/docs/generating.html">Generating</a></p><h3 id="Deploy-to-remote-sites"><a href="#Deploy-to-remote-sites" class="headerlink" title="Deploy to remote sites"></a>Deploy to remote sites</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ hexo deploy</span><br></pre></td></tr></table></figure><p>More info: <a href="https://hexo.io/docs/one-command-deployment.html">Deployment</a></p>]]></content>
    
    
    <summary type="html">&lt;p&gt;Welcome to &lt;a href=&quot;https://hexo.io/&quot;&gt;Hexo&lt;/a&gt;! This is your very first post. Check &lt;a href=&quot;https://hexo.io/docs/&quot;&gt;documentation&lt;/a&gt; for more info. If you get any problems when using Hexo, you can find the answer in &lt;a href=&quot;https://hexo.io/docs/troubleshooting.html&quot;&gt;troubleshooting&lt;/a&gt; or you can ask me on &lt;a href=&quot;https://github.com/hexojs/hexo/issues&quot;&gt;GitHub&lt;/a&gt;.&lt;/p&gt;
&lt;h2 id=&quot;Quick-Start&quot;&gt;&lt;a href=&quot;#Quick-Start&quot; class=&quot;headerlink&quot; title=&quot;Quick Start&quot;&gt;&lt;/a&gt;Quick Start&lt;/h2&gt;&lt;h3 id=&quot;Create-a-new-post&quot;&gt;&lt;a href=&quot;#Create-a-new-post&quot; class=&quot;headerlink&quot; title=&quot;Create a new post&quot;&gt;&lt;/a&gt;Create a new post&lt;/h3&gt;</summary>
    
    
    
    <category term="hello" scheme="https://hansen1994.github.io/categories/hello/"/>
    
    
  </entry>
  
  <entry>
    <title>flex 详解</title>
    <link href="https://hansen1994.github.io/2021/05/12/My-New-Post/"/>
    <id>https://hansen1994.github.io/2021/05/12/My-New-Post/</id>
    <published>2021-05-12T05:54:05.000Z</published>
    <updated>2021-05-23T14:29:12.201Z</updated>
    
    <content type="html"><![CDATA[<h3 id="0-display-flex的介绍"><a href="#0-display-flex的介绍" class="headerlink" title="0.display:flex的介绍"></a>0.display:flex的介绍</h3><p>&emsp;&emsp;这个是弹性布局必须要的属性，让竖的变横弹性布局之所以功能强大灵活，是因为它打破了很多原有的规则。可以将任意元素设置为弹性布局，弹性布局会对其内部的子元素产生影响：</p><span id="more"></span><blockquote><ol><li>块级元素不再单独占据一行（它是一维布局）。</li><li>如果块级元素没有显式规定宽度，也不会横向铺满父元素。</li><li>float、clear和vertical-align属性会失效。</li><li>在父级元素上定义display:flex;那么孩子就属于弹性布局了。</li></ol></blockquote><ul><li><input checked="" disabled="" type="checkbox"> 注明：下面1-8，我都省略了initial和inherit</li></ul><h3 id="1-flex-direction-row-row-reverse-column-column-reverse-盒子排列方向"><a href="#1-flex-direction-row-row-reverse-column-column-reverse-盒子排列方向" class="headerlink" title="1.flex-direction:row|row-reverse|column|column-reverse (盒子排列方向)"></a>1.flex-direction:row|row-reverse|column|column-reverse (盒子排列方向)</h3><blockquote><p>（1）row：默认值，主轴是水平的，起始位置在左侧，项目从左到右排列。<br>（2）row-reverse：主轴是水平的，起始位置在右侧，项目从右到左排列。<br>（3）column：主轴是垂直的，起始位置在顶端，项目垂直显示，从上到下。<br>（4）column-reverse：主轴是垂直的，起始位置在底部，项目垂直显示，从下到上。</p></blockquote><p>代码举例：</p><figure class="highlight css"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">/*flex-direction: row;*/</span></span><br><span class="line"><span class="selector-id">#main1</span>&#123;</span><br><span class="line"><span class="attribute">width</span>:<span class="number">400px</span>;</span><br><span class="line"><span class="attribute">display</span>:flex;</span><br><span class="line"><span class="attribute">flex-direction</span>: row;</span><br><span class="line"><span class="attribute">background</span>: <span class="number">#ccc</span>;</span><br><span class="line">&#125;</span><br><span class="line"><span class="selector-id">#main1</span> <span class="selector-tag">div</span>&#123;</span><br><span class="line"><span class="attribute">width</span>:<span class="number">50px</span>;</span><br><span class="line"><span class="attribute">height</span>:<span class="number">50px</span>;</span><br><span class="line">&#125;</span><br><span class="line"><span class="comment">/*flex-direction: row-reverse;*/</span></span><br><span class="line"><span class="selector-id">#main2</span>&#123;</span><br><span class="line"><span class="attribute">width</span>:<span class="number">400px</span>;</span><br><span class="line"><span class="attribute">display</span>:flex;</span><br><span class="line"><span class="attribute">flex-direction</span>: row-reverse;</span><br><span class="line"><span class="attribute">background</span>: <span class="number">#ccc</span>;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="selector-id">#main2</span> <span class="selector-tag">div</span>&#123;</span><br><span class="line"><span class="attribute">width</span>:<span class="number">50px</span>;</span><br><span class="line"><span class="attribute">height</span>:<span class="number">50px</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p><img src="https://img-blog.csdnimg.cn/20200316165116230.png" alt="在这里插入图片描述"></p><h3 id="2-flex-wrap-nowrap-wrap-wrap-reverse-拆行或拆列"><a href="#2-flex-wrap-nowrap-wrap-wrap-reverse-拆行或拆列" class="headerlink" title="2.flex-wrap: nowrap|wrap|wrap-reverse(拆行或拆列)"></a>2.flex-wrap: nowrap|wrap|wrap-reverse(拆行或拆列)</h3><p>&emsp;&emsp;就是说，一行铺满之后换行或者一列铺满后换列。</p><blockquote><p>（1）nowrap：默认值，规定容器中的项目不会拆行或者拆列显示。<br>（2）wrap：规定容器中的项目在需要的时候自动进行拆行或者拆列显示。<br>（3）wrap-reverse：规定容器中的项目在需要的时候自动进行拆行或者拆列显示，但顺序相反。</p></blockquote><p>代码：</p><figure class="highlight css"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br></pre></td><td class="code"><pre><span class="line"><span class="selector-id">#main2</span> &#123;</span><br><span class="line">    <span class="attribute">width</span>: <span class="number">200px</span>;</span><br><span class="line">    <span class="attribute">display</span>:flex;</span><br><span class="line">    <span class="attribute">flex-wrap</span>: wrap;</span><br><span class="line">    <span class="attribute">background</span>:<span class="number">#ccc</span>;</span><br><span class="line">&#125;</span><br><span class="line"><span class="selector-id">#main2</span> <span class="selector-tag">div</span> &#123;</span><br><span class="line">    <span class="attribute">width</span>: <span class="number">50px</span>;</span><br><span class="line">    <span class="attribute">height</span>: <span class="number">50px</span>;</span><br><span class="line">    <span class="attribute">text-align</span>:center;</span><br><span class="line">    <span class="attribute">line-height</span>:<span class="number">50px</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p><img src="https://img-blog.csdnimg.cn/20200316165436262.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3FxXzM4NTg4ODQ1,size_16,color_123465,t_70" alt="在这里插入图片描述"></p><h4 id="附加：flex-flow（1，2的结合写法）"><a href="#附加：flex-flow（1，2的结合写法）" class="headerlink" title="附加：flex-flow（1，2的结合写法）"></a>附加：flex-flow（1，2的结合写法）</h4><p><strong>flex-flow: [flex-direction] [flex-wrap];</strong><br>==这个是上面1，2的结合写法==<br>flex-direction flex-wrap的位置可以直接写成他们1，2的属性值<br>代码：</p><figure class="highlight css"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br></pre></td><td class="code"><pre><span class="line"><span class="selector-id">#main</span> &#123;</span><br><span class="line"><span class="attribute">width</span>: <span class="number">200px</span>;</span><br><span class="line"><span class="attribute">display</span>:flex;</span><br><span class="line"><span class="attribute">flex-flow</span>:row-reverse wrap;</span><br><span class="line"><span class="attribute">background</span>:<span class="number">#ccc</span>;</span><br><span class="line">&#125;</span><br><span class="line"><span class="selector-id">#main</span> <span class="selector-tag">div</span> &#123;</span><br><span class="line"><span class="attribute">width</span>: <span class="number">50px</span>;</span><br><span class="line"><span class="attribute">height</span>: <span class="number">50px</span>;</span><br><span class="line"><span class="attribute">text-align</span>:center;</span><br><span class="line"><span class="attribute">line-height</span>:<span class="number">50px</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h3 id="3-justify-content-flex-start-flex-end-center-space-between-space-around-主轴方向，项目块之间与周围的空间的空隙"><a href="#3-justify-content-flex-start-flex-end-center-space-between-space-around-主轴方向，项目块之间与周围的空间的空隙" class="headerlink" title="3.justify-content: flex-start|flex-end|center|space-between|space-around(主轴方向，项目块之间与周围的空间的空隙)"></a>3.justify-content: flex-start|flex-end|center|space-between|space-around(主轴方向，项目块之间与周围的空间的空隙)</h3><blockquote><p>（1）flex-start：默认值，规定项目位于容器主轴的起始位置。<br>（2）flex-end：规定项目位于容器主轴的结束位置。<br>（3）center：规定项目位于容器主轴的中间。<br>（4）space-between：规定项目在主轴的两端对齐。<br>（5）space-around：规定容器中项目两侧都保留相等的空间。</p></blockquote><p>代码：</p><figure class="highlight css"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br></pre></td><td class="code"><pre><span class="line"><span class="selector-id">#main1</span> &#123;</span><br><span class="line"><span class="attribute">width</span>: <span class="number">400px</span>;</span><br><span class="line"><span class="attribute">background</span>:<span class="number">#ccc</span>;</span><br><span class="line"><span class="attribute">display</span>: flex;</span><br><span class="line"><span class="attribute">justify-content</span>:space-between;</span><br><span class="line">&#125;</span><br><span class="line"><span class="selector-id">#main1</span> <span class="selector-tag">div</span> &#123;</span><br><span class="line"><span class="attribute">width</span>: <span class="number">70px</span>;</span><br><span class="line"><span class="attribute">height</span>: <span class="number">70px</span>;</span><br><span class="line"><span class="attribute">text-align</span>:center;</span><br><span class="line"><span class="attribute">line-height</span>:<span class="number">70px</span>;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="selector-id">#main2</span> &#123;</span><br><span class="line"><span class="attribute">width</span>: <span class="number">400px</span>;</span><br><span class="line"><span class="attribute">background</span>:<span class="number">#ccc</span>;</span><br><span class="line"><span class="attribute">display</span>: flex;</span><br><span class="line"><span class="attribute">justify-content</span>:center;</span><br><span class="line">&#125;</span><br><span class="line"><span class="selector-id">#main2</span> <span class="selector-tag">div</span> &#123;</span><br><span class="line"><span class="attribute">width</span>: <span class="number">70px</span>;</span><br><span class="line"><span class="attribute">height</span>: <span class="number">70px</span>;</span><br><span class="line"><span class="attribute">text-align</span>:center;</span><br><span class="line"><span class="attribute">line-height</span>:<span class="number">70px</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p><img src="https://img-blog.csdnimg.cn/20200316170045901.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3FxXzM4NTg4ODQ1,size_16,color_123465,t_70" alt="在这里插入图片描述"></p><h3 id="4-align-items-stretch-center-flex-start-flex-end-baseline-如center让里面所有子元素块垂直居中"><a href="#4-align-items-stretch-center-flex-start-flex-end-baseline-如center让里面所有子元素块垂直居中" class="headerlink" title="4.align-items: stretch|center|flex-start|flex-end|baseline(如center让里面所有子元素块垂直居中)"></a>4.align-items: stretch|center|flex-start|flex-end|baseline(如center让里面所有子元素块垂直居中)</h3><blockquote><p>（1）stretch：默认值，弹性布局容器中的项目会在交叉轴方向拉伸以适应容器。<br>（2）center：规定弹性布局容器中的项目在交叉轴方向上居中对齐。<br>（3）flex-start：规定弹性布局容器中的项目交叉轴起始位置对齐。<br>（4）flex-end：规定弹性布局容器中的项目交叉轴结束位置对齐。<br>（5）baseline：规定弹性布局容器中的项目第一行文字的基线对齐。</p></blockquote><p>代码：</p><figure class="highlight css"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><span class="line">  <span class="selector-id">#main</span> &#123;</span><br><span class="line">      <span class="attribute">width</span>: <span class="number">200px</span>;</span><br><span class="line">      <span class="attribute">height</span>: <span class="number">100px</span>;</span><br><span class="line">      <span class="attribute">background</span>:<span class="number">#ccc</span>;</span><br><span class="line">      <span class="attribute">display</span>: flex;</span><br><span class="line">      <span class="attribute">align-items</span>: center;</span><br><span class="line">  &#125;</span><br><span class="line">  <span class="selector-id">#main</span> <span class="selector-tag">div</span> &#123;</span><br><span class="line">      <span class="attribute">width</span>: <span class="number">70px</span>;</span><br><span class="line"><span class="attribute">height</span>: <span class="number">20px</span>;</span><br><span class="line">  &#125;</span><br></pre></td></tr></table></figure><p><img src="https://img-blog.csdnimg.cn/2020031617102167.png" alt="在这里插入图片描述"></p><h3 id="5-align-content-stretch-center-flex-start-flex-end-space-between-space-around-align-content属性只适用于多行的flex容器"><a href="#5-align-content-stretch-center-flex-start-flex-end-space-between-space-around-align-content属性只适用于多行的flex容器" class="headerlink" title="5.align-content: stretch|center|flex-start|flex-end|space-between|space-around(align-content属性只适用于多行的flex容器)"></a>5.align-content: stretch|center|flex-start|flex-end|space-between|space-around(align-content属性只适用于多行的flex容器)</h3><p>配合flex-wrap使用，效果更佳。</p><blockquote><p>（1）stretch：默认值，规定行被拉伸以适应交叉轴容器的尺寸，其中的项目随之被拉伸。<br>（2）center：规定容器中的行在容器交叉轴上居中对齐。<br>（3）flex-start：规定容器中的行在容器交叉轴上起始位置对齐。<br>（4）flex-end：规定容器中的行在容器交叉轴上结束位置对齐。<br>（5）space-between：规定容器中的行在容器交叉轴上两端对齐，行之间的间隔都相等。<br>（6）space-around:每规定容器中的行两侧的间隔相等。所以行之间的间隔比行与容器边缘的间隔大一倍。</p></blockquote><p>代码：</p><figure class="highlight css"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br></pre></td><td class="code"><pre><span class="line"><span class="selector-id">#main</span> &#123;</span><br><span class="line">    <span class="attribute">width</span>: <span class="number">200px</span>;</span><br><span class="line">    <span class="attribute">height</span>: <span class="number">300px</span>;</span><br><span class="line">    <span class="attribute">background</span>:<span class="number">#ccc</span>;</span><br><span class="line">    <span class="attribute">display</span>: flex;</span><br><span class="line">    <span class="attribute">flex-wrap</span>: wrap;</span><br><span class="line">    <span class="attribute">align-content</span>:space-between; </span><br><span class="line">&#125;</span><br><span class="line"><span class="selector-id">#main</span> <span class="selector-tag">div</span> &#123;</span><br><span class="line">    <span class="attribute">width</span>: <span class="number">50px</span>;</span><br><span class="line">    <span class="attribute">height</span>: <span class="number">20px</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><figure class="highlight css"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br></pre></td><td class="code"><pre><span class="line">&lt;<span class="selector-tag">div</span> id=&quot;<span class="selector-tag">main</span>&quot;&gt;</span><br><span class="line">    &lt;<span class="selector-tag">div</span> style=&quot;<span class="attribute">background-color</span>:red;&quot;&gt;<span class="number">1</span>&lt;/<span class="selector-tag">div</span>&gt;</span><br><span class="line">    &lt;<span class="selector-tag">div</span> style=&quot;<span class="attribute">background-color</span>:coral;&quot;&gt;<span class="number">2</span>&lt;/<span class="selector-tag">div</span>&gt;</span><br><span class="line">    &lt;<span class="selector-tag">div</span> style=&quot;<span class="attribute">background-color</span>:yellow;&quot;&gt;<span class="number">3</span>&lt;/<span class="selector-tag">div</span>&gt;</span><br><span class="line">    &lt;<span class="selector-tag">div</span> style=&quot;<span class="attribute">background-color</span>:green;&quot;&gt;<span class="number">4</span>&lt;/<span class="selector-tag">div</span>&gt;</span><br><span class="line"></span><br><span class="line">    &lt;<span class="selector-tag">div</span> style=&quot;<span class="attribute">background-color</span>:red;&quot;&gt;<span class="number">1</span>&lt;/<span class="selector-tag">div</span>&gt;</span><br><span class="line">    &lt;<span class="selector-tag">div</span> style=&quot;<span class="attribute">background-color</span>:coral;&quot;&gt;<span class="number">2</span>&lt;/<span class="selector-tag">div</span>&gt;</span><br><span class="line">    &lt;<span class="selector-tag">div</span> style=&quot;<span class="attribute">background-color</span>:yellow;&quot;&gt;<span class="number">3</span>&lt;/<span class="selector-tag">div</span>&gt;</span><br><span class="line">    &lt;<span class="selector-tag">div</span> style=&quot;<span class="attribute">background-color</span>:green;&quot;&gt;<span class="number">4</span>&lt;/<span class="selector-tag">div</span>&gt;</span><br><span class="line"></span><br><span class="line">    &lt;<span class="selector-tag">div</span> style=&quot;<span class="attribute">background-color</span>:red;&quot;&gt;<span class="number">1</span>&lt;/<span class="selector-tag">div</span>&gt;</span><br><span class="line">    &lt;<span class="selector-tag">div</span> style=&quot;<span class="attribute">background-color</span>:coral;&quot;&gt;<span class="number">2</span>&lt;/<span class="selector-tag">div</span>&gt;</span><br><span class="line">    &lt;<span class="selector-tag">div</span> style=&quot;<span class="attribute">background-color</span>:yellow;&quot;&gt;<span class="number">3</span>&lt;/<span class="selector-tag">div</span>&gt;</span><br><span class="line">    &lt;<span class="selector-tag">div</span> style=&quot;<span class="attribute">background-color</span>:green;&quot;&gt;<span class="number">4</span>&lt;/<span class="selector-tag">div</span>&gt;</span><br><span class="line">    </span><br><span class="line">    &lt;<span class="selector-tag">div</span> style=&quot;<span class="attribute">background-color</span>:red;&quot;&gt;<span class="number">1</span>&lt;/<span class="selector-tag">div</span>&gt;</span><br><span class="line">    &lt;<span class="selector-tag">div</span> style=&quot;<span class="attribute">background-color</span>:coral;&quot;&gt;<span class="number">2</span>&lt;/<span class="selector-tag">div</span>&gt;</span><br><span class="line">    &lt;<span class="selector-tag">div</span> style=&quot;<span class="attribute">background-color</span>:yellow;&quot;&gt;<span class="number">3</span>&lt;/<span class="selector-tag">div</span>&gt;</span><br><span class="line">    &lt;<span class="selector-tag">div</span> style=&quot;<span class="attribute">background-color</span>:green;&quot;&gt;<span class="number">4</span>&lt;/<span class="selector-tag">div</span>&gt;</span><br><span class="line">&lt;/<span class="selector-tag">div</span>&gt;</span><br></pre></td></tr></table></figure><p><img src="https://img-blog.csdnimg.cn/20200316172526398.png" alt="在这里插入图片描述"></p><h3 id="6-align-self-auto-stretch-center-flex-start-flex-end-baseline（内部某个元素在侧轴上的排列方式有所差异"><a href="#6-align-self-auto-stretch-center-flex-start-flex-end-baseline（内部某个元素在侧轴上的排列方式有所差异" class="headerlink" title="6. align-self: auto|stretch|center|flex-start|flex-end|baseline（内部某个元素在侧轴上的排列方式有所差异)"></a>6. align-self: auto|stretch|center|flex-start|flex-end|baseline（内部某个元素在侧轴上的排列方式有所差异)</h3><blockquote><p>（1）auto：默认值，继承弹性容器的align-items属性值，如果弹性容器未设置align-items，默认值为stretch。<br>（2）stretch：规定项目被拉伸以使用容器在交叉轴上的尺寸。<br>（3）center：规定项目在行中交叉轴方向居中对齐。<br>（4）flex-start：规定项目在行中交叉轴方向起始位置对齐。<br>（5）flex-end：规定项目在行中交叉轴方向结束位置对齐。<br>（6）baseline：规定项目在所在行中基线对齐。</p></blockquote><p>代码：</p><figure class="highlight css"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br></pre></td><td class="code"><pre><span class="line">        <span class="selector-id">#main</span> &#123;</span><br><span class="line">            <span class="attribute">width</span>: <span class="number">300px</span>;</span><br><span class="line">            <span class="attribute">height</span>: <span class="number">200px</span>;</span><br><span class="line">            <span class="attribute">background</span>:<span class="number">#ccc</span>;</span><br><span class="line">            <span class="attribute">display</span>: flex;</span><br><span class="line">            <span class="attribute">flex-flow</span>: row wrap;</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="selector-id">#main</span> <span class="selector-tag">div</span> &#123;</span><br><span class="line">            <span class="attribute">width</span>: <span class="number">70px</span>;</span><br><span class="line">            <span class="attribute">height</span>: <span class="number">70px</span>;</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="selector-id">#main</span> <span class="selector-tag">div</span><span class="selector-pseudo">:nth-child</span>(<span class="number">2</span>n) &#123;</span><br><span class="line">            <span class="attribute">align-self</span>: center;</span><br><span class="line">        &#125;</span><br><span class="line"></span><br><span class="line">&lt;<span class="selector-tag">div</span> id=&quot;<span class="selector-tag">main</span>&quot;&gt;</span><br><span class="line">    &lt;<span class="selector-tag">div</span> style=&quot;<span class="attribute">background-color</span>:coral;&quot;&gt;&lt;/<span class="selector-tag">div</span>&gt;</span><br><span class="line">    &lt;<span class="selector-tag">div</span> style=&quot;<span class="attribute">background-color</span>:green;&quot;&gt;&lt;/<span class="selector-tag">div</span>&gt;</span><br><span class="line">    &lt;<span class="selector-tag">div</span> style=&quot;<span class="attribute">background-color</span>:blue;&quot;&gt;&lt;/<span class="selector-tag">div</span>&gt;</span><br><span class="line">    &lt;<span class="selector-tag">div</span> style=&quot;<span class="attribute">background-color</span>:red;&quot;&gt;&lt;/<span class="selector-tag">div</span>&gt;</span><br><span class="line">    &lt;<span class="selector-tag">div</span> style=&quot;<span class="attribute">background-color</span>:yellow;&quot;&gt;&lt;/<span class="selector-tag">div</span>&gt;</span><br><span class="line">&lt;/<span class="selector-tag">div</span>&gt;</span><br></pre></td></tr></table></figure><p>在2n的倍数的项目块上做法。<br><img src="https://img-blog.csdnimg.cn/20200316201230948.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3FxXzM4NTg4ODQ1,size_16,color_123450,t_70" alt="在这里插入图片描述"></p><h4 id="附加1：区别align-items和-align-content"><a href="#附加1：区别align-items和-align-content" class="headerlink" title="附加1：区别align-items和 align-content"></a>附加1：区别align-items和 align-content</h4><p>&emsp;&emsp;align-items属性可以==应用于所有的flex容器==，它的作用是设置flex子项在每个flex行的交叉轴上的默认对齐方式。<br>&emsp;&emsp;align-content ==只适用多行的flex容器==（也就是flex容器中的子项不止一行时该属性才有效果），它的作用是当flex容器在交叉轴上有多余的空间时，将子项作为一个整体（属性值为：flex-start、flex-end、center时）进行对齐。不同取值的效果如下所示</p><h4 id="附加2：区别align-items和align-self"><a href="#附加2：区别align-items和align-self" class="headerlink" title="附加2：区别align-items和align-self"></a>附加2：区别align-items和align-self</h4><p>align-items 是用作父容器(样式写在有display的样式表里)，设置了之后就能让==整个孩子==具有此样式。而align-self作用于==子容器==。</p><h3 id="8-order-number（给容器设定所占位置）"><a href="#8-order-number（给容器设定所占位置）" class="headerlink" title="8.order: number（给容器设定所占位置）"></a>8.order: number（给容器设定所占位置）</h3><blockquote><p>（1）number:默认值是 0。规定flex项目的顺序(就是设置每个色块的位置)。</p></blockquote><figure class="highlight css"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br></pre></td><td class="code"><pre><span class="line"><span class="selector-id">#main</span> &#123;</span><br><span class="line">    <span class="attribute">width</span>:<span class="number">400px</span>;</span><br><span class="line">    <span class="attribute">height</span>:<span class="number">150px</span>;</span><br><span class="line">    <span class="attribute">display</span>:flex;</span><br><span class="line">    <span class="attribute">background</span>:<span class="number">#ccc</span>;</span><br><span class="line">&#125;</span><br><span class="line"><span class="selector-id">#main</span> <span class="selector-tag">div</span>&#123;</span><br><span class="line">    <span class="attribute">width</span>:<span class="number">70px</span>;</span><br><span class="line">    <span class="attribute">height</span>:<span class="number">70px</span>;</span><br><span class="line">&#125;</span><br><span class="line"><span class="selector-tag">div</span><span class="selector-id">#coral</span>&#123;<span class="attribute">order</span>:<span class="number">2</span>;&#125;</span><br><span class="line"><span class="selector-tag">div</span><span class="selector-id">#lightblue</span>&#123;<span class="attribute">order</span>:<span class="number">4</span>;&#125;</span><br><span class="line"><span class="selector-tag">div</span><span class="selector-id">#lightgreen</span>&#123;<span class="attribute">order</span>:<span class="number">3</span>;&#125;</span><br><span class="line"><span class="selector-tag">div</span><span class="selector-id">#pink</span>&#123;<span class="attribute">order</span>:<span class="number">1</span>;&#125;</span><br></pre></td></tr></table></figure><figure class="highlight cpp"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line">&lt;div id=<span class="string">&quot;main&quot;</span>&gt;</span><br><span class="line">    &lt;div style=<span class="string">&quot;background-color:coral;&quot;</span> id=<span class="string">&quot;coral&quot;</span>&gt;<span class="number">1</span>coral&lt;/div&gt;</span><br><span class="line">    &lt;div style=<span class="string">&quot;background-color:lightblue;&quot;</span> id=<span class="string">&quot;lightblue&quot;</span>&gt;<span class="number">2l</span>ightblue&lt;/div&gt;</span><br><span class="line">    &lt;div style=<span class="string">&quot;background-color:lightgreen;&quot;</span> id=<span class="string">&quot;lightgreen&quot;</span>&gt;<span class="number">3l</span>ightgreen&lt;/div&gt;</span><br><span class="line">    &lt;div style=<span class="string">&quot;background-color:pink;&quot;</span> id=<span class="string">&quot;pink&quot;</span>&gt;<span class="number">4</span>pink&lt;/div&gt;</span><br><span class="line">&lt;/div&gt;</span><br></pre></td></tr></table></figure><p><img src="https://img-blog.csdnimg.cn/20200316173619216.png" alt="在这里插入图片描述"></p><h3 id="9-flex-grow-number-放大属性，默认为0不放大"><a href="#9-flex-grow-number-放大属性，默认为0不放大" class="headerlink" title="9.flex-grow: number(放大属性，默认为0不放大)"></a>9.flex-grow: number(放大属性，默认为0不放大)</h3><p>&emsp;&emsp;flex-grow属性定义项目的放大比例，默认为0也就是不进行放大。如果容器不存在剩余空间，那么也就无法进行放大操作</p><blockquote><p>（1）number：一个数值，默认为0，用于规定子项目的放大比例，这个比例要和其他项目对比进行确定。</p></blockquote><p>代码：</p><figure class="highlight css"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br></pre></td><td class="code"><pre><span class="line"><span class="selector-id">#main</span> &#123;</span><br><span class="line">    <span class="attribute">width</span>: <span class="number">350px</span>;</span><br><span class="line">    <span class="attribute">height</span>: <span class="number">100px</span>;</span><br><span class="line">    <span class="attribute">background</span>:<span class="number">#ccc</span>;</span><br><span class="line">    <span class="attribute">display</span>: flex;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="selector-id">#main</span> <span class="selector-tag">div</span>&#123;<span class="attribute">flex-basis</span>:<span class="number">50px</span>;&#125;</span><br><span class="line"></span><br><span class="line"><span class="selector-id">#main</span> <span class="selector-tag">div</span><span class="selector-pseudo">:nth-of-type</span>(<span class="number">1</span>) &#123;<span class="attribute">flex-grow</span>: <span class="number">1</span>;&#125;</span><br><span class="line"><span class="selector-id">#main</span> <span class="selector-tag">div</span><span class="selector-pseudo">:nth-of-type</span>(<span class="number">2</span>) &#123;<span class="attribute">flex-grow</span>: <span class="number">3</span>;&#125;</span><br><span class="line"><span class="selector-id">#main</span> <span class="selector-tag">div</span><span class="selector-pseudo">:nth-of-type</span>(<span class="number">3</span>) &#123;<span class="attribute">flex-grow</span>: <span class="number">1</span>;&#125;</span><br><span class="line"><span class="selector-id">#main</span> <span class="selector-tag">div</span><span class="selector-pseudo">:nth-of-type</span>(<span class="number">4</span>) &#123;<span class="attribute">flex-grow</span>: <span class="number">1</span>;&#125;</span><br><span class="line"><span class="selector-id">#main</span> <span class="selector-tag">div</span><span class="selector-pseudo">:nth-of-type</span>(<span class="number">5</span>) &#123;<span class="attribute">flex-grow</span>: <span class="number">1</span>;&#125;</span><br></pre></td></tr></table></figure><p><img src="https://img-blog.csdnimg.cn/20200316174234998.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3FxXzM4NTg4ODQ1,size_16,color_123456,t_70" alt="在这里插入图片描述"></p><h3 id="10-flex-shrink：number-initial-inherit-属性则体现了弹性布局”屈”的一面，可以让项目尺寸收缩"><a href="#10-flex-shrink：number-initial-inherit-属性则体现了弹性布局”屈”的一面，可以让项目尺寸收缩" class="headerlink" title="10.flex-shrink：number|initial|inherit (属性则体现了弹性布局”屈”的一面，可以让项目尺寸收缩)"></a>10.flex-shrink：number|initial|inherit (属性则体现了弹性布局”屈”的一面，可以让项目尺寸收缩)</h3><p> 此属性规定容器中项目在主轴上的缩小比例，默认值为1。<br> 需要特别注意如下几点：</p><blockquote><p> (1)此属性应用于容器中的项目之上。<br> (2)必须容器主轴上的尺寸小于项目尺寸，才有可能缩小。<br> (3)属性值为0，表示项目部缩小。<br> (4)必须应用弹性布局环境中，否则无效。<br> (5)number：默认值是 1，容器中的项目相对于其他项目的搜索比率。</p></blockquote><p>代码：</p><figure class="highlight css"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><span class="line"><span class="selector-id">#main</span> &#123;</span><br><span class="line">    <span class="attribute">width</span>:<span class="number">350px</span>;</span><br><span class="line">    <span class="attribute">height</span>:<span class="number">100px</span>;</span><br><span class="line">    <span class="attribute">background</span>:<span class="number">#ccc</span>;</span><br><span class="line">    <span class="attribute">display</span>:flex;</span><br><span class="line">&#125;</span><br><span class="line"><span class="selector-id">#main</span> <span class="selector-tag">div</span> &#123;</span><br><span class="line">    <span class="attribute">flex-shrink</span>:<span class="number">1</span>;</span><br><span class="line">    <span class="attribute">flex-basis</span>:<span class="number">100px</span>;</span><br><span class="line">&#125;</span><br><span class="line"><span class="selector-id">#main</span> <span class="selector-tag">div</span><span class="selector-pseudo">:nth-of-type</span>(<span class="number">2</span>) &#123;<span class="attribute">flex-shrink</span>:<span class="number">3</span>;&#125;</span><br></pre></td></tr></table></figure><p><img src="https://img-blog.csdnimg.cn/20200316174711897.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3FxXzM4NTg4ODQ1,size_16,color_123456,t_70"></p><h3 id="11-flex-basis-number-auto-为项目设定一个最初的基准尺寸"><a href="#11-flex-basis-number-auto-为项目设定一个最初的基准尺寸" class="headerlink" title="11. flex-basis: number|auto(为项目设定一个最初的基准尺寸)"></a>11. flex-basis: number|auto(为项目设定一个最初的基准尺寸)</h3><p>&emsp;&emsp;当flex-basis和width属性同时存在时，width属性不生效，flex item的宽度为flex-basis设置的宽度</p><blockquote><p>（1）number：长度单位或者百分比，规定flex项目的初始长度。<br>（2）auto：默认值，长度等于flex项目本身长度，如果项目未指定长度，根据内容决定。</p></blockquote><h4 id="附加1：flex-1"><a href="#附加1：flex-1" class="headerlink" title="附加1：flex = 1"></a>附加1：flex = 1</h4><p> <strong>flex: 【flex-grow】【flex-shrink] 【flex-basis】| auto | 1</strong><br>&emsp;&emsp;此属性是flex-grow、flex-shrink和flex-basis属性的复合写法。默认属性值为0 1 auto。如果元素不是Flex项目，则此属性不起作用。作用于孩子。</p><table><thead><tr><th></th><th>【flex-grow】【flex-shrink] 【flex-basis】</th><th>合并写法</th></tr></thead><tbody><tr><td>flex:</td><td>1 1 auto</td><td>auto</td></tr><tr><td>flex:</td><td>0 0 auto</td><td>none</td></tr><tr><td>flex:</td><td>0 1 auto</td><td>1</td></tr><tr><td></td><td></td><td></td></tr></tbody></table><h4 id="附加2：flex当前兼容性"><a href="#附加2：flex当前兼容性" class="headerlink" title="附加2：flex当前兼容性"></a>附加2：flex当前兼容性</h4><p> 我们直接来看一张表<br> <img src="https://img-blog.csdnimg.cn/20200316204620258.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3FxXzM4NTg4ODQ1,size_16,color_FFFFFF,t_70" alt="在这里插入图片描述"><br> 我们看到，Flex Box除ie还欠兼容外，其他浏览器已经全部兼容，大家可以用FlexBox来一展自己的身手吧！</p>]]></content>
    
    
    <summary type="html">&lt;h3 id=&quot;0-display-flex的介绍&quot;&gt;&lt;a href=&quot;#0-display-flex的介绍&quot; class=&quot;headerlink&quot; title=&quot;0.display:flex的介绍&quot;&gt;&lt;/a&gt;0.display:flex的介绍&lt;/h3&gt;&lt;p&gt;&amp;emsp;&amp;emsp;这个是弹性布局必须要的属性，让竖的变横弹性布局之所以功能强大灵活，是因为它打破了很多原有的规则。可以将任意元素设置为弹性布局，弹性布局会对其内部的子元素产生影响：&lt;/p&gt;</summary>
    
    
    
    <category term="css" scheme="https://hansen1994.github.io/categories/css/"/>
    
    
    <category term="flex" scheme="https://hansen1994.github.io/tags/flex/"/>
    
  </entry>
  
</feed>
